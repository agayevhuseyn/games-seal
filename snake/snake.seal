include raylib as rl
include config

$time = .2
$timer = 0
$turned = false

define Snake(x, y)
    snake = {
        dir = {
          x = 1,
          y = 0
        },
        bodies = [{x = x, y = y}]
    }

    snake.move = define(self)
        copy = [null]
        size = len(self.bodies)

        i = 1
        while i < size
            push(copy, self.bodies[i - 1])
            i += 1

        copy[0] = self.bodies[size - 1]
        copy[0].x = copy[1].x
        copy[0].y = copy[1].y

        self.bodies = copy

    snake.push_body = define(self)
        push(
            self.bodies,
            {
                x = self.bodies[0].x + self.dir.x,
                y = self.bodies[0].y + self.dir.y
            }
        )
        self..move()
        self.bodies[0].x = self.bodies[0].x + self.dir.x
        self.bodies[0].y = self.bodies[0].y + self.dir.y

    snake.update = define(self, dt)
        if !$turned
            if rl.is_key_down(rl.keys.KEY_D) and (self.dir.x != -1 or
                                            len(self.bodies) == 1)
                self.dir.x = 1
                self.dir.y = 0
                $turned = true
            else if rl.is_key_down(rl.keys.KEY_A) and (self.dir.x != 1 or
                                            len(self.bodies) == 1)
                self.dir.x = -1
                self.dir.y = 0
                $turned = true
            else if rl.is_key_down(rl.keys.KEY_W) and (self.dir.y != 1 or
                                            len(self.bodies) == 1)
                self.dir.x = 0
                self.dir.y = -1
                $turned = true
            else if rl.is_key_down(rl.keys.KEY_S) and (self.dir.y != -1 or
                                            len(self.bodies) == 1)
                self.dir.x = 0
                self.dir.y = 1
                $turned = true
    
        if $timer > $time
            $turned = false
            $timer = 0

            if len(self.bodies) > 1 then self..move()
    
            head = self.bodies[0]
    
            head.x = head.x + self.dir.x
            head.y = head.y + self.dir.y
    
            if head.x > config.GRID_X - 1 then head.x = 0
            else if head.x < 0 then head.x = config.GRID_X - 1
    
            if head.y > config.GRID_Y - 1 then head.y = 0
            else if head.y < 0 then head.y = config.GRID_Y - 1

        else $timer += dt

    snake.draw = define(self)
        for body in self.bodies
            x = body.x
            y = body.y
            rl.draw_rectangle(x * config.GRID_SIZE, y * config.GRID_SIZE, config.GRID_SIZE, config.GRID_SIZE, rl.Color(255, 255, 255, 255))

    return snake
